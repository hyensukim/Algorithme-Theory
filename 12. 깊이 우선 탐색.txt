***깊이 우선 탐색(DFS)
- 깊이 우선 탐색은 그래프 완전 탐색 기법 중 하나이다.
    - 완전 탐색 : 모든 노드를 탐색.
- 깊이 우선 탐색은 그래프의 시작 노드에서 출발하여 탐색할 한 쪽 분기를 정하여 최대 깊이까지 
  탐색을 마친 후 다른쪽 분기로 이동하여 다시 탐색을 수행하는 알고리즘.
- 특징
    - 재귀함수로 구현.
        - 재귀함수를 인용하므로 스택 오버 풀로우 예외 발생을 유의해야 한다.
    - 스택자료구조 이용.
    - 시간 복잡도 : O(V(노드 수) + E(에지 수))

DFS 핵심 이론
- DFS는 한번 방문한 노드를 다시 방문하면 안되므로, 방문여부를 확인할 배열이 필요하다.(방문 배열 필수)
- 일반적으로 그래프(자료구조)는 인접 리스트(ArrayList)로 표현한다.
- DFS의 탐색 방식은 후입선출의 특성을 가지므로 재귀함수 또는 스택을 사용하여 설명된다.

DFS 동작 과정
1. DFS를 시작할 노드를 정한 후 사용할 자료구조(인접리스트) 초기화.
    - DFS를 위한 초기작업 인접 리스트로 그래프 표현하기, 방문 배열 초기화하기, 시작 노드 스택에 삽입하기이다.
    - 예를 들어 스택에 시작 노드를 1로 삽입할 때 해당 위치의 방문 배열을 체그하면 T,F,F,F,F,F가 된다
2. 스택에서 노드를 꺼낸 후 꺼 낸 노드의 인접 노드를 다시 스택에 삽입하기.
    - pop을 수행하여 노드를 꺼낸다. 꺼낸 노드를 탐색 순서에 기입하고 인접 리스트의 인접 노드를 스택에 삽입하며 방문 체크 배열을 체크한다. 방문 배열은 T,T,T,F,F,F가 된다.
3. 스택 자료구조에 값이 없을 때까지 반복.
    - 앞선 과정을 스택 자료구조에 값이 없을때까지 반복한다.
    -이때 이미 다녀간 노드의 방문 배열을 바탕으로 재삽입하지 않는것이 핵심이다.
4. 스택이 값이 없게 되면 DFS 종료.

*리마인드
- 스택에 노드를 삽입할 때 방문 배열을 체크하고, 스택에서 노드를 뽑을 때 탐색 순서에 기록하여 인접 노드를 방문 배열과 대조하여 살펴본다.
